{
	"info": {
		"_postman_id": "960acf78-b43b-42ec-ac7d-de2b1bc18999",
		"name": "ReactGram",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20820687"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register & SignIn",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", pm.response.json().token);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				}
			],
			"description": "Routes related to authentication, login, email verification, etc."
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get logged user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/users/profile",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update logged user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{URL}}/api/users",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find by Id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const id = pm.request.url.path.at(2);\r",
									"\r",
									"if(!id || id === '{id}') throw new Error('Inform the ID before making the request');"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/users/{id}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users",
								"{id}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Routes related to the user model"
		},
		{
			"name": "Photos",
			"item": [
				{
					"name": "List",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/photos",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"photos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search by title",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/photos/search",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"photos",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "List from User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const id = pm.request.url.path.at(3);\r",
									"\r",
									"if(!id || id === '{id}') throw new Error('Inform the ID before making the request');"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/photos/user/{id}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"photos",
								"user",
								"{id}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find by Id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const id = pm.request.url.path.at(2);\r",
									"\r",
									"if(!id || id === '{id}') throw new Error('Inform the ID before making the request');"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/photos/{id}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"photos",
								"{id}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Store",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{URL}}/api/photos",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"photos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const id = pm.request.url.path.at(2);\r",
									"\r",
									"if(!id || id === '{id}') throw new Error('Inform the ID before making the request');"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/photos/{id}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"photos",
								"{id}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const id = pm.request.url.path.at(2);\r",
									"\r",
									"if(!id || id === '{id}') throw new Error('Inform the ID before making the request');"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/photos/{id}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"photos",
								"{id}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Like",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const id = pm.request.url.path.at(2);\r",
									"\r",
									"if(!id || id === '{id}') throw new Error('Inform the ID before making the request');"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/photos/{id}/like",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"photos",
								"{id}",
								"like"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Comment",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const id = pm.request.url.path.at(2);\r",
									"\r",
									"if(!id || id === '{id}') throw new Error('Inform the ID before making the request');"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/photos/{id}/comments",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"photos",
								"{id}",
								"comments"
							]
						}
					},
					"response": []
				}
			],
			"description": "Routes related to the photo model"
		},
		{
			"name": "AssertOK",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/",
					"host": [
						"{{URL}}"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		}
	]
}